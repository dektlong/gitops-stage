apiVersion: apps/v1
kind: Deployment
metadata:
  name: mood-trainer
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: mood-trainer
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: mood-trainer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: mood-trainer
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: mood-trainer
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: mood-trainer
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: mood-trainer
    spec:
      containers:
      - image: dektregistry.azurecr.io/isvs/data-ai@sha256:cbf6fe5c6f569566e2e6ddfcf3237426d52b6b8165efba2c95ba89c77e0518ea
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: mood-trainer
  labels:
    app.kubernetes.io/part-of: mood-trainer
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: mood-trainer
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: mood-trainer
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: mood-trainer
  ports:
  - targetPort: 8080
    port: 8080
    name: http

